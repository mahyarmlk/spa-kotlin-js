buildscript {
    ext.kotlin_version = '1.2.71'
    ext.html_version = '0.6.11'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.37"
    }
}

group 'com.techprd.webapp'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
apply plugin: 'org.jetbrains.kotlin.frontend'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile "com.techprd.material:kotlin-material:1.0-SNAPSHOT"
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
    compile("org.jetbrains.kotlinx:kotlinx-html-js:$html_version")
}

kotlinFrontend {
    sourceMaps = true
    downloadNodeJsVersion = "latest"

    npm {
        dependency("kotlin", "1.2.51")
        dependency "style-loader"

        devDependency("karma")
    }

    webpackBundle {
        bundleName = "main"
        contentPath = file('webapp')
        sourceMapEnabled = true
        port = 8080
        mode = 'development'
    }

    define "PRODUCTION", false

//    rollupBundle {
//        bundleName = "rolledUp"
//    }

//    allBundles {
//        /* set properties for all bundles */
//    }

//    bundle("someBundler") {
//        ....
//    }
}


compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.main = "call"
}

compileTestKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js-tests/${project.name}-tests.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
//    kotlinOptions.moduleName = project.name + "-test"
    kotlinOptions.main = "call"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}